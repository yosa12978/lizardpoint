services:
  web:
    container_name: lizardpoint-web
    build:
      context: .
      dockerfile: air.dockerfile
    restart: always
    ports:
      - "3000:80"
    volumes:
      - ./:/app
    environment:
      - LP_POSTGRES_USER=user
      - LP_POSTGRES_PASSWORD=user
      - LP_POSTGRES_DB=lizardpoint_db
      - LP_POSTGRES_URL=lizardpoint-postgres:5432
      - LP_POSTGRES_SSLMODE=disable
      - LP_POSTGRES_MIGRATIONS_PATH=file://migrations
    networks:
      - lp-net
    healthcheck:
      test: curl -f http://localhost
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    container_name: lizardpoint-postgres
    image: postgres
    restart: always
    ports:
      - "3001:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=user
      - POSTGRES_DB=lizardpoint_db
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - lp-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 3
  adminer:
    container_name: lizardpoint-adminer
    image: adminer
    restart: always
    ports:
      - "3003:8080"
    networks:
      - lp-net

networks:
  lp-net:
    driver: bridge

volumes:
  pg_data:
